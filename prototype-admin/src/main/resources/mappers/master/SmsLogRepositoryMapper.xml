<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ko.prototype.admin.dao.repository.SmsLogRepository">
	<!--
		此文件初版由工具生成，仅需生成一次，请定制开发
		生成时间: 2018-02-24 13:12:21
	-->
	<resultMap id="SmsLogGridResultMap" type="org.ko.prototype.admin.bean.domain.SmsLogGrid" extends="org.ko.prototype.data.dao.mapper.SmsLogMapper.BaseResultMap">
	</resultMap>

	<sql id="Select">
		select
			<include refid="org.ko.prototype.data.dao.mapper.SmsLogMapper.Base_Column_List" />
		from art_sms_log where 1
		<foreach collection="_this" index="key" item="value" open="" close="" separator="">
			<if test="!key.startsWith('_')">
				<if test="value == null">
			and ${key} is null
				</if>
				<if test="value != null">
			and ${key} = #{value}
				</if>
			</if>
		</foreach>
		<if test="_orderBy != null and _orderBy.trim() != ''">
			order by #{_orderBy}
		</if>
	</sql>

	<select id="select" parameterType="map" resultMap="org.ko.prototype.data.dao.mapper.SmsLogMapper.ResultMapWithBLOBs">
		<include refid="Select"></include>
	</select>
	
	<select id="count" parameterType="map" resultType="long">
		select count(*) from (
		<include refid="Select"></include>
		) t
	</select>

	<select id="selectGrid" parameterType="map" resultMap="SmsLogGridResultMap">
		select 
			sl.id 
			, sl.mobile 
			, sl.flow_type 
			, sl.start_time 
			, sl.end_time 
			, sl.cost 
			, sl.status_code 
			, sl.input 
			, sl.output 
			, sl.retry_count 
			, sl.error_message 
			, sl.trace_code 
			, sl.host_name 
			, sl.create_user_id 
			, sl.create_by 
			, sl.create_date 
			, sl.update_user_id 
			, sl.update_by 
			, sl.update_date 
		from art_sms_log sl 
		where 1 = 1
		<if test="id != null">
			and sl.id = #{id}
		</if>
		<if test="mobile != null and mobile.trim() != ''">
			and sl.mobile like concat('%', #{mobile}, '%')
		</if>
		<if test="flow_type != null">
			and sl.flow_type = #{flow_type}
		</if>
		<if test="start_time_from != null">
			and date_format(sl.start_time, '%Y-%m-%d') &gt;= #{start_time_from}
		</if>
		<if test="start_time_to != null">
			and date_format(sl.start_time, '%Y-%m-%d') &lt;= #{start_time_to}
		</if>
		<if test="start_time != null">
			and date_format(sl.start_time, '%Y-%m-%d') = #{start_time}
		</if>
		<if test="end_time_from != null">
			and date_format(sl.end_time, '%Y-%m-%d') &gt;= #{end_time_from}
		</if>
		<if test="end_time_to != null">
			and date_format(sl.end_time, '%Y-%m-%d') &lt;= #{end_time_to}
		</if>
		<if test="end_time != null">
			and date_format(sl.end_time, '%Y-%m-%d') = #{end_time}
		</if>
		<if test="cost != null">
			and sl.cost = #{cost}
		</if>
		<if test="status_code != null and status_code.trim() != ''">
			and sl.status_code like concat('%', #{status_code}, '%')
		</if>
		<if test="input != null">
			and sl.input = #{input}
		</if>
		<if test="output != null">
			and sl.output = #{output}
		</if>
		<if test="retry_count != null">
			and sl.retry_count = #{retry_count}
		</if>
		<if test="error_message != null and error_message.trim() != ''">
			and sl.error_message like concat('%', #{error_message}, '%')
		</if>
		<if test="trace_code != null and trace_code.trim() != ''">
			and sl.trace_code like concat('%', #{trace_code}, '%')
		</if>
		<if test="host_name != null and host_name.trim() != ''">
			and sl.host_name like concat('%', #{host_name}, '%')
		</if>
		<if test="create_user_id != null">
			and sl.create_user_id = #{create_user_id}
		</if>
		<if test="create_by != null and create_by.trim() != ''">
			and sl.create_by like concat('%', #{create_by}, '%')
		</if>
		<if test="create_date_from != null">
			and date_format(sl.create_date, '%Y-%m-%d') &gt;= #{create_date_from}
		</if>
		<if test="create_date_to != null">
			and date_format(sl.create_date, '%Y-%m-%d') &lt;= #{create_date_to}
		</if>
		<if test="create_date != null">
			and date_format(sl.create_date, '%Y-%m-%d') = #{create_date}
		</if>
		<if test="update_user_id != null">
			and sl.update_user_id = #{update_user_id}
		</if>
		<if test="update_by != null and update_by.trim() != ''">
			and sl.update_by like concat('%', #{update_by}, '%')
		</if>
		<if test="update_date_from != null">
			and date_format(sl.update_date, '%Y-%m-%d') &gt;= #{update_date_from}
		</if>
		<if test="update_date_to != null">
			and date_format(sl.update_date, '%Y-%m-%d') &lt;= #{update_date_to}
		</if>
		<if test="update_date != null">
			and date_format(sl.update_date, '%Y-%m-%d') = #{update_date}
		</if>
		order by sl.id desc
	</select>

	<insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="id">
		insert into art_sms_log 
		<foreach collection="_this" index="key" open="(" close=")" separator=",">
			<if test="!key.startsWith('_')">
			${key}
			</if>
		</foreach>
		values
		<foreach collection="_this" index="key" item="value" open="(" close=")" separator=",">
			<if test="!key.startsWith('_')">
			if(length(#{value}) = 0, null, #{value})
			</if>
		</foreach>
	</insert>
	
	<update id="update" parameterType="map">
		update art_sms_log set
		<foreach collection="_this" index="key" item="value" open="" close="" separator=",">
		<if test="key != 'id' and !key.startsWith('_')">
			${key} = #{value}
		</if>
		</foreach>
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="map">
		delete from art_sms_log where 1
		<foreach collection="_this" index="key" item="value" open="" close="" separator="">
			<if test="!key.startsWith('_')">
				<if test="value == null">
			and ${key} is null
				</if>
				<if test="value != null">
			and ${key} = #{value}
				</if>
			</if>
		</foreach>
	</delete>
</mapper>